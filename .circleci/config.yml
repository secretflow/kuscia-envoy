# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/configuration-reference
version: 2.1

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/configuration-reference/#jobs

executors:
  linux_x64_executor: # declares a reusable executor
    docker:
      - image: envoyproxy/envoy-build-ubuntu:7304f974de2724617b7492ccb4c9c58cd420353a
    resource_class: 2xlarge
    shell: /bin/bash --login -eo pipefail
  linux_aarch64_executor:
    docker:
      - image: envoyproxy/envoy-build-ubuntu:7304f974de2724617b7492ccb4c9c58cd420353a
    resource_class: arm.2xlarge
    shell: /bin/bash --login -eo pipefail

commands:
  build_envoy:
    steps:
      - run:
          name: "make build-envoy-local"
          command: |
            ARCH=$(uname -m)
            GCC_VERSION=$(gcc --version)
            echo "current gcc version: $GCC_VERSION"
            if [[ $ARCH = "aarch64" || $ARCH == "arm64" ]]; then
              echo "upgrade gcc version to 11 for $ARCH"
              apt-get update
              apt-get install gcc-11 g++-11 -y
              update-alternatives --install /usr/bin/gcc gcc /usr/bin/gcc-11 1100 --slave /usr/bin/g++ g++ /usr/bin/g++-11
            fi
            git submodule update --init
            git config --global --add safe.directory ./
            make build-envoy-local
      - store_artifacts:
          path: output

jobs:
  linux_build_envoy:
    parameters:
      executor:
        type: string
    executor: <<parameters.executor>>
    steps:
      - checkout
      - build_envoy
  docker_image_publish:
    docker:
      - image: cimg/deploy:2023.06.1
    steps:
      - attach_workspace:
          at: output
      - checkout
      - setup_remote_docker
      - run:
          name: Build Docker image
          command: |
            CIRCLETAG=$(echo ${CIRCLE_TAG} | sed 's/v//')
            docker buildx create --name kuscia-envoy --platform linux/arm64,linux/amd64 --use
            IMG=secretflow/kuscia-envoy
            IMG_LATEST={IMG}:latest
            IMG_TAG={IMG}:{CIRCLETAG}

            ALIYUN_IMG=secretflow-registry.cn-hangzhou.cr.aliyuncs.com/secretflow/kuscia-envoy
            ALIYUN_IMG_LATEST={ALIYUN_IMG}:latest
            ALIYUN_IMG_TAG={ALIYUN_IMG}:{CIRCLETAG}

            #login docker
            docker login -u ${DOCKER_USERNAME} -p ${DOCKER_DEPLOY_TOKEN}

            docker buildx build -t ${IMG_LATEST} --platform linux/arm64,linux/amd64 -f ./build_image/dockerfile/kuscia-envoy-anolis.Dockerfile . --push
            docker buildx build -t ${IMG_TAG} --platform linux/arm64,linux/amd64 -f ./build_image/dockerfile/kuscia-envoy-anolis.Dockerfile . --push


            # login docker - aliyun
            docker login -u ${ALIYUN_DOCKER_USERNAME} -p ${ALIYUN_DOCKER_PASSWORD} secretflow-registry.cn-hangzhou.cr.aliyuncs.com
            docker buildx build -t {ALIYUN_IMG_LATEST} --platform linux/amd64,linux/arm64 -f ./build_image/dockerfile/kuscia-envoy-anolis.Dockerfile . --push
            docker buildx build -t {ALIYUN_IMG_TAG} --platform linux/amd64,linux/arm64 -f ./build_image/dockerfile/kuscia-envoy-anolis.Dockerfile . --push




# Orchestrate jobs using workflows
# See: https://circleci.com/docs/configuration-reference/#workflows
workflows:
  build-workflow:
    jobs:
      - linux_build_envoy:
          matrix:
            parameters:
              executor: [ "linux_x64_executor", "linux_aarch64_executor" ]
      - docker_image_publish:
          requires:
            - linux_build_envoy
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /^v.*/
