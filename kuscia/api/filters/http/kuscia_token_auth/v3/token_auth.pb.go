// Copyright 2023 Ant Group Co., Ltd.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//   http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.21.8
// source: kuscia/api/filters/http/kuscia_token_auth/v3/token_auth.proto

package v3

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type TokenAuth struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SourceTokenList []*TokenAuth_SourceToken `protobuf:"bytes,1,rep,name=source_token_list,json=sourceTokenList,proto3" json:"source_token_list,omitempty"`
}

func (x *TokenAuth) Reset() {
	*x = TokenAuth{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kuscia_api_filters_http_kuscia_token_auth_v3_token_auth_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TokenAuth) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TokenAuth) ProtoMessage() {}

func (x *TokenAuth) ProtoReflect() protoreflect.Message {
	mi := &file_kuscia_api_filters_http_kuscia_token_auth_v3_token_auth_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TokenAuth.ProtoReflect.Descriptor instead.
func (*TokenAuth) Descriptor() ([]byte, []int) {
	return file_kuscia_api_filters_http_kuscia_token_auth_v3_token_auth_proto_rawDescGZIP(), []int{0}
}

func (x *TokenAuth) GetSourceTokenList() []*TokenAuth_SourceToken {
	if x != nil {
		return x.SourceTokenList
	}
	return nil
}

type FilterConfigPerRoute struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Disabled bool `protobuf:"varint,1,opt,name=disabled,proto3" json:"disabled,omitempty"`
}

func (x *FilterConfigPerRoute) Reset() {
	*x = FilterConfigPerRoute{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kuscia_api_filters_http_kuscia_token_auth_v3_token_auth_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FilterConfigPerRoute) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilterConfigPerRoute) ProtoMessage() {}

func (x *FilterConfigPerRoute) ProtoReflect() protoreflect.Message {
	mi := &file_kuscia_api_filters_http_kuscia_token_auth_v3_token_auth_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilterConfigPerRoute.ProtoReflect.Descriptor instead.
func (*FilterConfigPerRoute) Descriptor() ([]byte, []int) {
	return file_kuscia_api_filters_http_kuscia_token_auth_v3_token_auth_proto_rawDescGZIP(), []int{1}
}

func (x *FilterConfigPerRoute) GetDisabled() bool {
	if x != nil {
		return x.Disabled
	}
	return false
}

type TokenAuth_SourceToken struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Source string   `protobuf:"bytes,1,opt,name=source,proto3" json:"source,omitempty"`
	Tokens []string `protobuf:"bytes,2,rep,name=tokens,proto3" json:"tokens,omitempty"`
}

func (x *TokenAuth_SourceToken) Reset() {
	*x = TokenAuth_SourceToken{}
	if protoimpl.UnsafeEnabled {
		mi := &file_kuscia_api_filters_http_kuscia_token_auth_v3_token_auth_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TokenAuth_SourceToken) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TokenAuth_SourceToken) ProtoMessage() {}

func (x *TokenAuth_SourceToken) ProtoReflect() protoreflect.Message {
	mi := &file_kuscia_api_filters_http_kuscia_token_auth_v3_token_auth_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TokenAuth_SourceToken.ProtoReflect.Descriptor instead.
func (*TokenAuth_SourceToken) Descriptor() ([]byte, []int) {
	return file_kuscia_api_filters_http_kuscia_token_auth_v3_token_auth_proto_rawDescGZIP(), []int{0, 0}
}

func (x *TokenAuth_SourceToken) GetSource() string {
	if x != nil {
		return x.Source
	}
	return ""
}

func (x *TokenAuth_SourceToken) GetTokens() []string {
	if x != nil {
		return x.Tokens
	}
	return nil
}

var File_kuscia_api_filters_http_kuscia_token_auth_v3_token_auth_proto protoreflect.FileDescriptor

var file_kuscia_api_filters_http_kuscia_token_auth_v3_token_auth_proto_rawDesc = []byte{
	0x0a, 0x3d, 0x6b, 0x75, 0x73, 0x63, 0x69, 0x61, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x66, 0x69, 0x6c,
	0x74, 0x65, 0x72, 0x73, 0x2f, 0x68, 0x74, 0x74, 0x70, 0x2f, 0x6b, 0x75, 0x73, 0x63, 0x69, 0x61,
	0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x2f, 0x76, 0x33, 0x2f, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x32, 0x65, 0x6e, 0x76, 0x6f, 0x79, 0x2e, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e,
	0x73, 0x2e, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x2e, 0x68, 0x74, 0x74, 0x70, 0x2e, 0x6b,
	0x75, 0x73, 0x63, 0x69, 0x61, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x61, 0x75, 0x74, 0x68,
	0x2e, 0x76, 0x33, 0x22, 0xc1, 0x01, 0x0a, 0x09, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x41, 0x75, 0x74,
	0x68, 0x12, 0x75, 0x0a, 0x11, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x49, 0x2e, 0x65,
	0x6e, 0x76, 0x6f, 0x79, 0x2e, 0x65, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x2e,
	0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x2e, 0x68, 0x74, 0x74, 0x70, 0x2e, 0x6b, 0x75, 0x73,
	0x63, 0x69, 0x61, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x76,
	0x33, 0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x41, 0x75, 0x74, 0x68, 0x2e, 0x53, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x0f, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x1a, 0x3d, 0x0a, 0x0b, 0x53, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x06, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x73, 0x22, 0x32, 0x0a, 0x14, 0x46, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x50, 0x65, 0x72, 0x52, 0x6f, 0x75, 0x74, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x08, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x42, 0x5c, 0x5a, 0x5a, 0x67,
	0x69, 0x74, 0x6c, 0x61, 0x62, 0x2e, 0x61, 0x6c, 0x69, 0x70, 0x61, 0x79, 0x2d, 0x69, 0x6e, 0x63,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74, 0x66, 0x6c, 0x6f, 0x77, 0x2f,
	0x6b, 0x75, 0x73, 0x63, 0x69, 0x61, 0x2d, 0x65, 0x6e, 0x76, 0x6f, 0x79, 0x2f, 0x6b, 0x75, 0x73,
	0x63, 0x69, 0x61, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x73, 0x2f,
	0x68, 0x74, 0x74, 0x70, 0x2f, 0x6b, 0x75, 0x73, 0x63, 0x69, 0x61, 0x5f, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x5f, 0x61, 0x75, 0x74, 0x68, 0x2f, 0x76, 0x33, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_kuscia_api_filters_http_kuscia_token_auth_v3_token_auth_proto_rawDescOnce sync.Once
	file_kuscia_api_filters_http_kuscia_token_auth_v3_token_auth_proto_rawDescData = file_kuscia_api_filters_http_kuscia_token_auth_v3_token_auth_proto_rawDesc
)

func file_kuscia_api_filters_http_kuscia_token_auth_v3_token_auth_proto_rawDescGZIP() []byte {
	file_kuscia_api_filters_http_kuscia_token_auth_v3_token_auth_proto_rawDescOnce.Do(func() {
		file_kuscia_api_filters_http_kuscia_token_auth_v3_token_auth_proto_rawDescData = protoimpl.X.CompressGZIP(file_kuscia_api_filters_http_kuscia_token_auth_v3_token_auth_proto_rawDescData)
	})
	return file_kuscia_api_filters_http_kuscia_token_auth_v3_token_auth_proto_rawDescData
}

var file_kuscia_api_filters_http_kuscia_token_auth_v3_token_auth_proto_msgTypes = make([]protoimpl.MessageInfo, 3)
var file_kuscia_api_filters_http_kuscia_token_auth_v3_token_auth_proto_goTypes = []interface{}{
	(*TokenAuth)(nil),             // 0: envoy.extensions.filters.http.kuscia_token_auth.v3.TokenAuth
	(*FilterConfigPerRoute)(nil),  // 1: envoy.extensions.filters.http.kuscia_token_auth.v3.FilterConfigPerRoute
	(*TokenAuth_SourceToken)(nil), // 2: envoy.extensions.filters.http.kuscia_token_auth.v3.TokenAuth.SourceToken
}
var file_kuscia_api_filters_http_kuscia_token_auth_v3_token_auth_proto_depIdxs = []int32{
	2, // 0: envoy.extensions.filters.http.kuscia_token_auth.v3.TokenAuth.source_token_list:type_name -> envoy.extensions.filters.http.kuscia_token_auth.v3.TokenAuth.SourceToken
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_kuscia_api_filters_http_kuscia_token_auth_v3_token_auth_proto_init() }
func file_kuscia_api_filters_http_kuscia_token_auth_v3_token_auth_proto_init() {
	if File_kuscia_api_filters_http_kuscia_token_auth_v3_token_auth_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_kuscia_api_filters_http_kuscia_token_auth_v3_token_auth_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TokenAuth); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kuscia_api_filters_http_kuscia_token_auth_v3_token_auth_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FilterConfigPerRoute); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_kuscia_api_filters_http_kuscia_token_auth_v3_token_auth_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TokenAuth_SourceToken); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_kuscia_api_filters_http_kuscia_token_auth_v3_token_auth_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   3,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_kuscia_api_filters_http_kuscia_token_auth_v3_token_auth_proto_goTypes,
		DependencyIndexes: file_kuscia_api_filters_http_kuscia_token_auth_v3_token_auth_proto_depIdxs,
		MessageInfos:      file_kuscia_api_filters_http_kuscia_token_auth_v3_token_auth_proto_msgTypes,
	}.Build()
	File_kuscia_api_filters_http_kuscia_token_auth_v3_token_auth_proto = out.File
	file_kuscia_api_filters_http_kuscia_token_auth_v3_token_auth_proto_rawDesc = nil
	file_kuscia_api_filters_http_kuscia_token_auth_v3_token_auth_proto_goTypes = nil
	file_kuscia_api_filters_http_kuscia_token_auth_v3_token_auth_proto_depIdxs = nil
}
